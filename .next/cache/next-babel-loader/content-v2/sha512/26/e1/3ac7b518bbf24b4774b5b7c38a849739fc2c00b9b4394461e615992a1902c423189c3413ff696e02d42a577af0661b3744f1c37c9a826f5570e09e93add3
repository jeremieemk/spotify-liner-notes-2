{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jeremie/web/44_spotify-liner-notes2.0/pages/components/ReleaseDetails.js\";\nimport React from \"react\";\nexport default function Hello(props) {\n  console.log(props);\n  const {\n    discogsData,\n    spotifyData\n  } = props;\n\n  function addComa(i) {\n    return spotifyData.artists.length > 1 && i < spotifyData.artists.length - 1;\n  }\n\n  function renderArtists() {\n    return spotifyData.artists.map((artist, i) => /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [artist.name, addComa(i) && `, `]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this));\n  }\n\n  return spotifyData && /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: [renderArtists(), \" \", spotifyData.name]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 23\n  }, this);\n}","map":{"version":3,"sources":["/Users/jeremie/web/44_spotify-liner-notes2.0/pages/components/ReleaseDetails.js"],"names":["React","Hello","props","console","log","discogsData","spotifyData","addComa","i","artists","length","renderArtists","map","artist","name"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe,SAASC,KAAT,CAAeC,KAAf,EAAsB;AACjCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,QAAM;AAACG,IAAAA,WAAD;AAAcC,IAAAA;AAAd,MAA6BJ,KAAnC;;AAEA,WAASK,OAAT,CAAiBC,CAAjB,EAAoB;AACpB,WACEF,WAAW,CAACG,OAAZ,CAAoBC,MAApB,GAA6B,CAA7B,IAAkCF,CAAC,GAAGF,WAAW,CAACG,OAAZ,CAAoBC,MAApB,GAA6B,CADrE;AAGD;;AAEC,WAASC,aAAT,GAAyB;AACzB,WAAOL,WAAW,CAACG,OAAZ,CAAoBG,GAApB,CAAwB,CAACC,MAAD,EAASL,CAAT,kBAC7B;AAAA,iBACGK,MAAM,CAACC,IADV,EAEGP,OAAO,CAACC,CAAD,CAAP,IAAe,IAFlB;AAAA;AAAA;AAAA;AAAA;AAAA,YADK,CAAP;AAMD;;AAEC,SACGF,WAAW,iBAAI;AAAA,eAAKK,aAAa,EAAlB,OAAuBL,WAAW,CAACQ,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA,UADlB;AAKH","sourcesContent":["import React from \"react\";\n\nexport default function Hello(props) {\n    console.log(props)\n    const {discogsData, spotifyData} = props\n\n    function addComa(i) {\n    return (\n      spotifyData.artists.length > 1 && i < spotifyData.artists.length - 1\n    );\n  }\n\n    function renderArtists() {\n    return spotifyData.artists.map((artist, i) => (\n      <span>\n        {artist.name}\n        {addComa(i) && `, `}\n      </span>\n    ));\n  }\n\n    return(\n       spotifyData && <h1>{renderArtists()} {spotifyData.name}</h1>\n        \n    )\n  \n}\n"]},"metadata":{},"sourceType":"module"}