{"ast":null,"code":"import LastFM from \"last-fm\";\nimport { useEffect, useState } from \"react\";\nexport default function useLastFmData(cleanTrackDetails) {\n  const {\n    0: artistBio,\n    1: setArtistBio\n  } = useState(null);\n  useEffect(() => {\n    if (cleanTrackDetails) {\n      // const lastfm = new LastFM(\"8e17009fc64041e78ce4a9ec5c053180\", {\n      //   userAgent: \"http://localhost:3000\",\n      // });\n      fetch(\"http://ws.audioscrobbler.com/2.0/?method=album.getinfo&api_key=8e17009fc64041e78ce4a9ec5c053180&artist=Cher&album=Believe&format=json\") // Handle success\n      .then(response => response.json()) // convert to json\n      .then(json => console.log(\"test api\", json)) //print data to console\n      .catch(err => console.log(\"Request Failed\", err)); // lastfm.trackSearch({ q: cleanTrackDetails.song }, (err, data) => {\n      //   if (err) console.error(err);\n      //   else console.log(\"lastfm\", data);\n      // });\n    }\n  }, [cleanTrackDetails]);\n  return artistBio;\n}","map":{"version":3,"sources":["/Users/jeremie/web/44_spotify-liner-notes2.0/pages/api/useLastFmData.js"],"names":["LastFM","useEffect","useState","useLastFmData","cleanTrackDetails","artistBio","setArtistBio","fetch","then","response","json","console","log","catch","err"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,SAAnB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,eAAe,SAASC,aAAT,CAAuBC,iBAAvB,EAA0C;AACvD,QAAM;AAAA,OAACC,SAAD;AAAA,OAAYC;AAAZ,MAA4BJ,QAAQ,CAAC,IAAD,CAA1C;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIG,iBAAJ,EAAuB;AACrB;AACA;AACA;AAEAG,MAAAA,KAAK,CACH,uIADG,CAAL,CAGE;AAHF,OAIGC,IAJH,CAISC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAJtB,EAIuC;AAJvC,OAKGF,IALH,CAKSE,IAAD,IAAUC,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,IAAxB,CALlB,EAKiD;AALjD,OAMGG,KANH,CAMUC,GAAD,IAASH,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BE,GAA9B,CANlB,EALqB,CAarB;AACA;AACA;AACA;AACD;AACF,GAnBQ,EAmBN,CAACV,iBAAD,CAnBM,CAAT;AAqBA,SAAOC,SAAP;AACD","sourcesContent":["import LastFM from \"last-fm\";\nimport { useEffect, useState } from \"react\";\n\nexport default function useLastFmData(cleanTrackDetails) {\n  const [artistBio, setArtistBio] = useState(null);\n  useEffect(() => {\n    if (cleanTrackDetails) {\n      // const lastfm = new LastFM(\"8e17009fc64041e78ce4a9ec5c053180\", {\n      //   userAgent: \"http://localhost:3000\",\n      // });\n\n      fetch(\n        \"http://ws.audioscrobbler.com/2.0/?method=album.getinfo&api_key=8e17009fc64041e78ce4a9ec5c053180&artist=Cher&album=Believe&format=json\"\n      )\n        // Handle success\n        .then((response) => response.json()) // convert to json\n        .then((json) => console.log(\"test api\", json)) //print data to console\n        .catch((err) => console.log(\"Request Failed\", err));\n\n      // lastfm.trackSearch({ q: cleanTrackDetails.song }, (err, data) => {\n      //   if (err) console.error(err);\n      //   else console.log(\"lastfm\", data);\n      // });\n    }\n  }, [cleanTrackDetails]);\n\n  return artistBio;\n}\n"]},"metadata":{},"sourceType":"module"}