{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jeremie/web/44_spotify-liner-notes2.0/pages/components/ReleaseDetails.js\";\nimport React from \"react\";\nexport default function ReleaseDetails(props) {\n  var _this = this;\n\n  var discogsData = props.discogsData,\n      spotifyData = props.spotifyData;\n\n  function renderArtists() {\n    return spotifyData.artists.map(function (artist) {\n      return artist.name;\n    }).join(\", \");\n  }\n\n  var orderedReleaselist = discogsData && discogsData.sort(function (a, b) {\n    return b.community.have - a.community.have;\n  }).slice(0, 10);\n  console.log(\"ordered list\", orderedReleaselist);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [renderArtists(), \" - \", spotifyData.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), discogsData && orderedReleaselist.map(function (release) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [release.title, \" - \", release.year, \" - \", release.label[0]]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 15\n        }, _this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: release.cover_image,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 15\n        }, _this)]\n      }, void 0, true);\n    }), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"hello\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_c = ReleaseDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReleaseDetails\");","map":{"version":3,"sources":["/Users/jeremie/web/44_spotify-liner-notes2.0/pages/components/ReleaseDetails.js"],"names":["React","ReleaseDetails","props","discogsData","spotifyData","renderArtists","artists","map","artist","name","join","orderedReleaselist","sort","a","b","community","have","slice","console","log","release","title","year","label","cover_image"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAAA;;AAAA,MACpCC,WADoC,GACPD,KADO,CACpCC,WADoC;AAAA,MACvBC,WADuB,GACPF,KADO,CACvBE,WADuB;;AAG5C,WAASC,aAAT,GAAyB;AACvB,WAAOD,WAAW,CAACE,OAAZ,CAAoBC,GAApB,CAAwB,UAACC,MAAD;AAAA,aAAYA,MAAM,CAACC,IAAnB;AAAA,KAAxB,EAAiDC,IAAjD,CAAsD,IAAtD,CAAP;AACD;;AAED,MAAMC,kBAAkB,GACtBR,WAAW,IACXA,WAAW,CACRS,IADH,CACQ,UAACC,CAAD,EAAIC,CAAJ,EAAU;AACd,WAAOA,CAAC,CAACC,SAAF,CAAYC,IAAZ,GAAmBH,CAAC,CAACE,SAAF,CAAYC,IAAtC;AACD,GAHH,EAIGC,KAJH,CAIS,CAJT,EAIY,EAJZ,CAFF;AAQAC,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BR,kBAA5B;AACA,sBACE;AAAA,4BACE;AAAA,iBACGN,aAAa,EADhB,SACuBD,WAAW,CAACK,IADnC;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAIGN,WAAW,IACVQ,kBAAkB,CAACJ,GAAnB,CAAuB,UAACa,OAAD,EAAa;AAClC,0BACE;AAAA,gCACE;AAAA,qBACGA,OAAO,CAACC,KADX,SACqBD,OAAO,CAACE,IAD7B,SACsCF,OAAO,CAACG,KAAR,CAAc,CAAd,CADtC;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAIE;AAAK,UAAA,GAAG,EAAEH,OAAO,CAACI,WAAlB;AAA+B,UAAA,GAAG,EAAC;AAAnC;AAAA;AAAA;AAAA;AAAA,iBAJF;AAAA,sBADF;AAQD,KATD,CALJ,eAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAfF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD;KAnCuBvB,c","sourcesContent":["import React from \"react\";\n\nexport default function ReleaseDetails(props) {\n  const { discogsData, spotifyData } = props;\n\n  function renderArtists() {\n    return spotifyData.artists.map((artist) => artist.name).join(\", \");\n  }\n\n  const orderedReleaselist =\n    discogsData &&\n    discogsData\n      .sort((a, b) => {\n        return b.community.have - a.community.have;\n      })\n      .slice(0, 10);\n\n  console.log(\"ordered list\", orderedReleaselist);\n  return (\n    <div>\n      <h1>\n        {renderArtists()} - {spotifyData.name}\n      </h1>\n      {discogsData &&\n        orderedReleaselist.map((release) => {\n          return (\n            <>\n              <h1>\n                {release.title} - {release.year} - {release.label[0]}\n              </h1>\n              <img src={release.cover_image} alt=\"\" />\n            </>\n          );\n        })}\n      <h1>hello</h1>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}