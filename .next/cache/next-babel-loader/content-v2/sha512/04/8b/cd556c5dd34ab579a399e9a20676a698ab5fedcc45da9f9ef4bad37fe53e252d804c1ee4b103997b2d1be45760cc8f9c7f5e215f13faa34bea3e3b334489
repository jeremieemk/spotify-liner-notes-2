{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jeremie/web/44_spotify-liner-notes2.0/pages/components/ReleaseDetails.js\";\nimport React from \"react\";\nexport default function ReleaseDetails(props) {\n  const {\n    discogsData,\n    spotifyData\n  } = props;\n\n  function renderArtists() {\n    return spotifyData.artists.map(artist => artist.name).join(\", \");\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [renderArtists(), \" - \", spotifyData.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), discogsData && discogsData.map(release => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [release.title, \" - \", release.year, \" - \", release.label[0]]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: release.cover_image,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true);\n    }), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"hello\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/Users/jeremie/web/44_spotify-liner-notes2.0/pages/components/ReleaseDetails.js"],"names":["React","ReleaseDetails","props","discogsData","spotifyData","renderArtists","artists","map","artist","name","join","release","title","year","label","cover_image"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAC5C,QAAM;AAAEC,IAAAA,WAAF;AAAeC,IAAAA;AAAf,MAA+BF,KAArC;;AAEA,WAASG,aAAT,GAAyB;AACvB,WAAOD,WAAW,CAACE,OAAZ,CAAoBC,GAApB,CAAyBC,MAAD,IAAYA,MAAM,CAACC,IAA3C,EAAiDC,IAAjD,CAAsD,IAAtD,CAAP;AACD;;AAED,sBACE;AAAA,4BACE;AAAA,iBACGL,aAAa,EADhB,SACuBD,WAAW,CAACK,IADnC;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAIGN,WAAW,IACVA,WAAW,CAACI,GAAZ,CAAiBI,OAAD,IAAa;AAC3B,0BACE;AAAA,gCACE;AAAA,qBACGA,OAAO,CAACC,KADX,SACqBD,OAAO,CAACE,IAD7B,SACsCF,OAAO,CAACG,KAAR,CAAc,CAAd,CADtC;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAK,UAAA,GAAG,EAAEH,OAAO,CAACI,WAAlB;AAA+B,UAAA,GAAG,EAAC;AAAnC;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA,sBADF;AAQD,KATD,CALJ,eAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAfF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD","sourcesContent":["import React from \"react\";\n\nexport default function ReleaseDetails(props) {\n  const { discogsData, spotifyData } = props;\n\n  function renderArtists() {\n    return spotifyData.artists.map((artist) => artist.name).join(\", \");\n  }\n\n  return (\n    <div>\n      <h1>\n        {renderArtists()} - {spotifyData.name}\n      </h1>\n      {discogsData &&\n        discogsData.map((release) => {\n          return (\n            <>\n              <h1>\n                {release.title} - {release.year} - {release.label[0]}\n              </h1>\n              <img src={release.cover_image} alt=\"\" />\n            </>\n          );\n        })}\n      <h1>hello</h1>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}